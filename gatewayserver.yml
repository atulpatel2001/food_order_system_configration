server:
  port: 8074

# for eureka server
eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8073/eureka/


spring:
  output:
    ansi:
      enabled: always
  cloud:
    gateway:
      httpclient:
        # time out configration as yml file
        connect-timeout: 1000
        response-timeout: 10s
      discovery:
        locator:
          enabled: true
          all-namespaces: true
          lowerCaseServiceId: true
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest 
  
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:8072/realms/FoodSwift/protocol/openid-connect/certs




springdoc:
  swagger-ui:
    path: /
    enabled: true
  enable-native-support: true
  api-docs:
    enabled: true


#enable all actuator endpoint
management:
  endpoints:
    web:
      exposure:
        include: "*"
  # for all actuator property
  endpoint:
    gateway:
      enabled: true
    health:
      probes:
        enabled: true
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  info:
    env:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

info:
  app:
    name: "gateway server"
    description: "Food Order System  gateway server"
    version: "1.0.0"


logging:
  level:
    com:
      gateway:
        sever: DEBUG
    org:
      springframework:
        cloud:
          gateway: DEBUG
        http:
          server:
            reactive: DEBUG
        web:
          reactive: DEBUG

  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

        
    
    
